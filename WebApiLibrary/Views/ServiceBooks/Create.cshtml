@model WebApiLibrary.ViewModels.ServiceBooksViewModel
@{
	ViewBag.Title = "Create";
}
<center>
	<h2 style="
    margin-top: 40px;
    padding-left: 35px;
    margin-bottom: 0px;">
		Add New Book
	</h2>
</center>

<link rel=" //cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css">
<link href="~/Content/Books/BookIndex.css" rel="stylesheet" />
<link href="~/Content/Books/BookCreate.css" rel="stylesheet" />
<style>
	a, a:hover {
		color: white;
	}
</style>
<div class="modal fade" id="newAuthorModal">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title">Create</h2>
			</div>
			<div class="modal-body">
				<p>New Author name</p>
				<input id="newAuthorTextBox" type="text" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" id="btnOk" style="margin-right:5px" onclick="addName()">Add</button>
				<a href="#" id="btnCancel" class="btn btn-primary " onclick="cancelName()"> Cancel </a>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="newBranchModal">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title">Create</h2>
			</div>
			<div class="modal-body">
				<p>New Branch name</p>
				<input id="newBranchTextBox" type="text" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" id="btnOk" style="margin-right:5px" onclick="addBranch()">Add</button>
				<a href="#" id="btnCancel" class="btn btn-primary " onclick="cancelBranch()"> Cancel </a>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="newPublicationModal">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title">Create</h2>
			</div>
			<div class="modal-body">
				<p>New Publication name</p>
				<input id="newPublicationTextBox" type="text" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" id="btnOk" style="margin-right:5px" onclick="addPublication()">Add</button>
				<a href="#" id="btnCancel" class="btn btn-primary " onclick="cancelPublication()"> Cancel </a>
			</div>
		</div>
	</div>
</div>


<div class="container">
	<form name="createBookForm" id="createBook" class="form-horizontal">
		<div class="form-group">
			<label class="text-info">Book Name</label>
			<input type="text" id="bookName" class="form-control" />
		</div>
		<div class="form-group">
			<label class="text-info">Author Name</label>
				<table class="table-borderless">
					<tr>
						<td style="width : 280px">
							<select id="authorName" class="form-control"></select>
						</td>
						<td>
							<button type="button" class="btn btn-outline-primary  wrapper"  onclick="NewAuthor()">
								<svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-file-plus" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
									<path fill-rule="evenodd" d="M4 0h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H4z"></path>
									<path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"></path>
								</svg>
							</button>
						</td>
					</tr>
				</table>
				@Html.ValidationMessageFor(model => model.book.serviceAuthorName, "", new { @class = "text-danger" })
			
		</div>		
		<div class="form-group">
			<label class="text-info">Serial Number</label>
			<input type="text" id="serialNum" class="form-control" />
		</div>
		<div class="form-group">
			<label class="text-info">Branch</label>
			<table class="table-borderless">
				<tr>
					<td style="width : 280px">
						<select id="branch" class="form-control"></select>
					</td>
					<td>
						<button type="button" class="btn btn-outline-primary  wrapper" onclick=" NewBranch()">
							<svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-file-plus" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
								<path fill-rule="evenodd" d="M4 0h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H4z"></path>
								<path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"></path>
							</svg>
						</button>
					</td>
				</tr>
			</table>
			@Html.ValidationMessageFor(model => model.book.serviceBranch, "", new { @class = "text-danger" })
		</div>
		<div class="form-group">
			<label class="text-info">Publication</label>
			<table class="table-borderless">
				<tr>
					<td style="width : 280px">
						<select name="publications" id="publication" class="form-control"></select>
					</td>
					<td>
						<button type="button" class="btn btn-outline-primary  wrapper" onclick="NewPublication()">
							<svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-file-plus" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
								<path fill-rule="evenodd" d="M4 0h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H4z"></path>
								<path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"></path>
							</svg>
						</button>
					</td>
				</tr>
			</table>
			@Html.ValidationMessageFor(model => model.book.servicePublications, "", new { @class = "text-danger" })

		</div>
		<div class="form-group">
			<label for="isAvailable" class="text-info"> Is Available </label>
			<input type="checkbox" id="isAvailable" name="isAvailable">

		</div>
		<button type="submit" class="btn btn-default">Create</button>
		<br /><br />
	</form>
	<div>
		<button class="btn btn-primary">@Html.ActionLink("Back to List", "Index", new { @style = "color:#FFFFFF;" })</button>
	</div>
</div>
@section Scripts {
	<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
	<script>
		$(document).ready(function () {
			var authorName = $('#authorName');
			authorName.append($("<option></option>").val('').html('Please Select Author'));
			$.ajax({
				url: "https://localhost:44369/api/ServiceAuthors/GetAuthor",
				type: 'GET',
				datatype: 'JSON',
				success: function (data) {
					$.each(data, function (index, author) {
						authorName.append($("<option></option>").val(author.serviceAuthorName).html(author.serviceAuthorName));
					});
				},
				error: function () {
					alert('dropdown error');
				}
			});

			var branch = $('#branch');
			branch.append($("<option></option>").val('').html('Please Select Branch'));
			$.ajax({
				url: "https://localhost:44369/api/ServiceBooks/GetBranch",
				type: 'GET',
				datatype: 'JSON',
				success: function (data) {
					$.each(data, function (index, branchs) {
						branch.append($("<option></option>").val(branchs.serviceBranch).html(branchs.serviceBranch));
					});
				},
				error: function () {
					alert('dropdown error');
				}
			});
			var publication = $('#publication');
			publication.append($("<option></option>").val('').html('Please Select Publication'));
			$.ajax({
				url: "https://localhost:44369/api/ServiceBooks/GetPublication",
				type: 'GET',
				datatype: 'JSON',
				success: function (data) {
					$.each(data, function (index, publications) {
						publication.append($("<option></option>").val(publications.servicePublications).html(publications.servicePublications));
					});
				},
				error: function () {
					alert('dropdown error');
				}
			});

			$("#createBook").submit(function (event) {
				event.preventDefault();
				var apiurl = "https://localhost:44369/api/ServiceBooks/PostServiceBooks";
				if (document.getElementById('isAvailable').checked) {
					var availability = true;
				}
				else {
					var availability = false;
				}				
				var data = {
					"serviceBookName": $("#bookName").val().trim(),
					"serviceSerialNumber": $("#serialNum").val().trim(),
					"serviceAuthorName": $("#authorName").val().trim(),
					"serviceBranch": $("#branch").val().trim(),
					"servicePublications": $("#publication").val().trim(),
					"serviceIsAvailable": availability
				}
				console.log(data);
				$.ajax({
					url: apiurl,
					type: 'POST',
					dataType: 'json',
					data: data,
					success: function (d) {
						alert("Saved Successfully");
						document.getElementById("createBook").reset();
					},
					error: function () {
						alert("Error please try again");
					}
				});
			});
		});  
		function NewAuthor() {
			$("#newAuthorModal").modal('show');
		}
		function cancelName() {
			$("#newAuthorModal").modal('hide');
		}
        function addName() {
			var newAuthorName = $("#newAuthorTextBox").val();
			$.ajax({
			    type: "POST",
				url: 'https://localhost:44369/api/ServiceAuthors/PostServiceAuthor',
				data: { "serviceAuthorName": newAuthorName },
			    success: function (result) {
				  if (result) {
					  alert(newAuthorName + " added successfully ! ");
					  $("#newAuthorModal").modal('hide');
					  location.reload();
				} else {
					alert("something went wrong");
					}
				}
			});
		}

		function NewBranch() {
			$("#newBranchModal").modal('show');
		}
		function cancelBranch() {
			$("#newBranchModal").modal('hide');
		}
		function addBranch() {
			var newBranchName = $("#newBranchTextBox").val();
			$.ajax({
			    type: "POST",
				url: 'https://localhost:44369/api/ServiceBooks/PostServiceBranches',
				data: {"serviceBranch": newBranchName },
			    success: function (result) {
				  if (result) {
					  alert(newBranchName + " added successfully ! ");
					  $("#newBranchModal").modal('hide');
					  location.reload();
				} else {
					  alert("something went wrong");
					  location.reload();
					}
				}
			});
		}

		function NewPublication() {
			$("#newPublicationModal").modal('show');
		}
		function cancelPublication() {
			$("#newPublicationModal").modal('hide');
		}
		function addPublication() {
			var newPublicationName = $("#newPublicationTextBox").val();
			$.ajax({
			    type: "POST",
				url: 'https://localhost:44369/api/ServiceBooks/PostServicePublications',
				data: { "servicePublications": newPublicationName },
			    success: function (result) {
				  if (result) {
					  alert(newPublicationName + " added successfully ! ");
					  $("#newAuthorModal").modal('hide');
					  location.reload();
				} else {
					alert("something went wrong");
					}
				}
			});
		}
	</script>
}

